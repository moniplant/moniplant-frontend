/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 public/models/plant1.glb -o src/app/components/Plant1.jsx -r public 
*/

import React, { useEffect, useRef } from 'react'
import { Html, Line, useGLTF } from '@react-three/drei'
import { useActivePortalStore } from '../state-management/activePortal'
import Temperature from '../UI/Temperature'
import Humidity from '../UI/Humidity'
import Moisture from '../UI/Moisture'
import MoistureGraph from '../UI/MoistureGraph'

function Content() {
  const line1 = useRef();
  const line2 = useRef();
  const line3 = useRef();
  const line4 = useRef();

  useEffect(() => {
    if(line1 && line1.current) {
      line1.current.material.reflectivity = 0;
      line1.current.material.roughness = 0;
    }
  }, [line1]);

  useEffect(() => {
    if(line2 && line2.current) {
      line2.current.material.reflectivity = 0;
      line2.current.material.roughness = 0;
    }
  }, [line2]);

  useEffect(() => {
    if(line3 && line3.current) {
      line3.current.material.reflectivity = 0;
      line3.current.material.roughness = 0;
    }
  }, [line3]);

  useEffect(() => {
    if(line4 && line4.current) {
      line4.current.material.reflectivity = 0;
      line4.current.material.roughness = 0;
    }
  }, [line4]);

  return (
    <group rotation-z={-Math.PI / 12} position-x={-0.1}>
      <Line
          ref={line1}
          points={[[-0.4, -0.1, -0.8], [-0.4, -0.1, -0.6], [-0.1, -0.1, -0.6]]}
          color="white"
          lineWidth={2}
      />
      <Line
          ref={line2}
          points={[[-0.4, 0.4, -0.5], [-0.4, 0.4, -0.7],  [-0.01, 0.4, -0.7]]}
          color="white"
          lineWidth={2}
      />
      <Line
          ref={line3}
          points={[[0.8, -0.2, -0.9], [0.8, -0.2, -0.6], [0.2, -0.2, -0.6]]}
          color="white"
          lineWidth={2}
      />
      <Line
          ref={line4}
          points={[[0.6, 0.3, -0.5], [0.6, 0.3, -0.7], [0.3, 0.3, -0.7]]}
          color="white"
          lineWidth={2}
      />
      <Html
        position={[-0.5, 0.4, -0.5]}
        rotation-x={-Math.PI/2}
        style={{ userSelect: "none" }}
        as="div"
        className="wrapper"
        castShadow
        receiveShadow
        center
        transform
        distanceFactor={0.5}
      >
        <Temperature />
      </Html>
      <Html
        position={[0.8, 0.2, -0.6]}
        rotation-x={-Math.PI/2}
        style={{ userSelect: "none" }}
        as="div"
        className="wrapper"
        castShadow
        receiveShadow
        center
        transform
        distanceFactor={0.5}
      >
        <Humidity />
      </Html>
      <Html
        position={[0.9, 0.4, -0.1]}
        rotation-x={-Math.PI/2}
        style={{ userSelect: "none" }}
        as="div"
        className="wrapper"
        castShadow
        receiveShadow
        center
        transform
        distanceFactor={0.5}
      >
        <Moisture />
      </Html>
      <Html
        position={[-0.5, 0.4, -0.1]}
        rotation-x={-Math.PI/2}
        style={{ userSelect: "none" }}
        as="div"
        className="wrapper"
        castShadow
        receiveShadow
        center
        transform
        distanceFactor={0.5}
      >
        <MoistureGraph />
      </Html>
    </group>
  );
}

export function Plant1(props) {
  const { nodes, materials } = useGLTF('/models/plant1.glb')
  const { activePortal } = useActivePortalStore();
  return (
    <group {...props} dispose={null}>
      <group position={[0, -113.445, 0]} rotation={[Math.PI / 2, 0, 0]} scale={227.159}>
        { activePortal === props.name && <Content />}
        <mesh geometry={nodes.awa_outdoor.geometry} material={materials['Material.002']} />
        <mesh geometry={nodes.awa_outdoor_1.geometry} material={materials['10461_Yucca_Plant_v1']} />
      </group>
    </group>
  )
}

useGLTF.preload('/models/plant1.glb')
